- name: Apache Tomcat Setup 
  hosts: appservers
  become: yes
  vars:
    tom_url: https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.37/bin/apache-tomcat-8.5.37.tar.gz

  tasks:

    - name: Install JDK
      apt:
        name: openjdk-8-jdk
        state: present
        update_cache: yes 

    - name: Download Tomcat Tar Ball/Binaries
      get_url:
        url: "{{tom_url}}"
        dest: /tmp/tomcat-8.tar.gz

    - name: Add tomcat group
      group:
        name: tomcat
        state: present

    - name: Add tomcat user
      user:
        name: tomcat
        group: tomcat
        shell: /bin/nologin
        home: /usr/local/tomcat8

    - file:
        path: /tmp/tomcat8
        state: directory

    - name: Extract tomcat
      unarchive:
        src: /tmp/tomcat-8.tar.gz
        dest: /tmp/tomcat8/
        remote_src: yes
        list_files: yes
      register: unarchive_info

    - debug:
        msg: "{{unarchive_info.files[0].split('/')[0]}}"

    - name: Synchronize /tmp/tomcat8/tomcat_cont /usr/local/tomcat8.
      synchronize:
        src: "/tmp/tomcat8/{{unarchive_info.files[0].split('/')[0]}}/"
        dest: /usr/local/tomcat8/
      delegate_to: "{{ inventory_hostname }}"

    - name: Change ownership of /usr/local/tomcat8
      file:
        path: /usr/local/tomcat8
        owner: tomcat
        group: tomcat
        recurse: yes

    - name: Setup tomcat SVC file on ubuntu
      template:
         src: templates/tomcat.service.j2
         dest: /etc/systemd/system/tomcat.service
         mode: "a+x"

    - name: just force systemd to reread configs (2.4 and above)
      systemd:
        daemon_reload: yes 

    - name: Start & Enable Tomcat 8
      service:
        name: tomcat
        state: started
        enabled: yes

- name: MySQL Setup 
  hosts: dbservers
  become: yes
  vars: 
    db_user: admin
    db_pass: admin@123

  tasks: 
    - name: Installing MySQL
      apt:
        name: mysql-server
        state: present

    - name: Start MySQL Service
      service:
        name: mysql.service
        state: started
        enabled: yes

    - name: Create database user
      community.mysql.mysql_user:
        name: "{{db_user}}"
        password: "{{db_pass}}"
        priv: '*.*:ALL'
        state: present
        login_unix_socket: /run/mysqld/mysqld.sock

    - name: Create a new database with name 'user-auth'
      community.mysql.mysql_db:
        name: user-auth
        state: present
        login_unix_socket: /run/mysqld/mysqld.sock  





